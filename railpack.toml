# Railpack configuration for ultralytics deployment
# Modern alternative to Nixpacks with better Python support

[build]
# Python version specification
PYTHON_VERSION = "3.11"

# System dependencies for OpenCV and ultralytics
# Railpack automatically handles common Python package dependencies
system_packages = [
    "python3-dev",
    "python3-pip",
    "build-essential",
    "libgl1",
    "libglx-mesa0",
    "libgl1-mesa-dri",
    "libgl1-mesa-dev",
    "libegl1-mesa",
    "libegl1-mesa-dev",
    "libglu1-mesa",
    "libglu1-mesa-dev",
    "mesa-utils",
    "mesa-common-dev",
    "libglfw3",
    "libglfw3-dev",
    "libglib2.0-0", 
    "libsm6",
    "libxext6",
    "libxrender-dev",
    "libgomp1",
    "libgthread-2.0-0",
    "libgtk-3-0",
    "libgstreamer1.0-0",
    "libgstreamer-plugins-base1.0-0",
    "libavcodec-dev",
    "libavformat-dev",
    "libswscale-dev",
    "libfontconfig1",
    "libcairo2",
    "libgdk-pixbuf2.0-0",
    "libpango-1.0-0",
    "libharfbuzz0b",
    "libpangocairo-1.0-0",
    "libatk1.0-0",
    "libcairo-gobject2",
    "libjpeg-dev",
    "libpng-dev",
    "libtiff-dev",
    "libwebp-dev",
    "libopenjp2-7-dev"
]

[install]
# Standard pip install from requirements.txt
# Railpack automatically handles Python package dependencies
commands = [
    "pip install --upgrade pip setuptools wheel",
    "pip install -r requirements.txt",
    "ldconfig",
    "ln -sf /usr/lib/x86_64-linux-gnu/libGL.so.1 /usr/lib/libGL.so.1 || true",
    "export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/mesa:$LD_LIBRARY_PATH"
]

[runtime]
# Environment variables for headless operation
QT_QPA_PLATFORM = "offscreen"
DISPLAY = ":99"
OPENCV_IO_ENABLE_OPENEXR = "1"
ULTRALYTICS_SETTINGS = '{"runs_dir": "/tmp", "datasets_dir": "/tmp", "weights_dir": "/tmp"}'
LD_LIBRARY_PATH = "/usr/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/mesa:/usr/lib"

[start]
# Start command
command = "gunicorn --bind 0.0.0.0:$PORT app:app"